function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
%J = 0;
%grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta


hTheta = sigmoid(X*theta);

innerSumJ1 = -y.*log(hTheta);
innerSumJ2 = -(1-y).*log(1-hTheta);

J1 = sum(innerSumJ1 + innerSumJ2) / m;

theta2 = theta(2:end);
sqThetaSum = theta2.^2;

J2 = (lambda / 2*m) * sum(sqThetaSum);

J = J1 + J2;



innerSumGrad = hTheta - y;
sumGrad = innerSumGrad / m;

grad1 = X'*sumGrad;

grad = grad1 + (lambda/m) * theta;
grad(1) = grad(1) - (lambda/m) * theta(1);


% =============================================================

end
